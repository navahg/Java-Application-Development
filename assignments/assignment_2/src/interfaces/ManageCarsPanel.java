/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import business.Car;
import business.Fleet;
import interfaces.filter.*;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.TreeMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raghavan
 */
public class ManageCarsPanel extends javax.swing.JPanel {

    private javax.swing.JLabel lastUpdatedOnLabel;
    private Fleet fleet;
    /**
     * Creates new form CreateCarPanel
     */
    public ManageCarsPanel() {
        this.fleet = new Fleet();
        initComponents();
    }

    public ManageCarsPanel(javax.swing.JLabel lastUpdatedOnLabel, Fleet fleet) {
        this.lastUpdatedOnLabel = lastUpdatedOnLabel;
        this.fleet = fleet;
        initComponents();
        disableResultsPane();
        hideErrorLabels();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewSplitPane = new javax.swing.JSplitPane();
        filterPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        firstAvailableCarButton = new javax.swing.JButton();
        showAvailabilityButton = new javax.swing.JButton();
        showManufacturersButton = new javax.swing.JButton();
        expiredCertificateButton = new javax.swing.JButton();
        showAllButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        advFilterSplitPane = new javax.swing.JSplitPane();
        filterOptionsPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        filterList = new javax.swing.JList<>();
        filterByValuePanel = new javax.swing.JPanel();
        resultsSplitPane = new javax.swing.JSplitPane();
        viewWrapperPane = new javax.swing.JScrollPane();
        viewPanel = new javax.swing.JPanel();
        modelNumberTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        manufacturedYearElement = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        totalSeatsSpinner = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        availableSeatsSpinner = new javax.swing.JSpinner();
        availabilityCheckbox = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        certificateExpiryTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cityTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        serialNumberTextField = new javax.swing.JTextField();
        manufacturerTextField = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        certificateExpiryErrorLabel = new javax.swing.JLabel();
        cityErrorLabel = new javax.swing.JLabel();
        serialNumberErrorLabel = new javax.swing.JLabel();
        manufacturerErrorLabel = new javax.swing.JLabel();
        modelNumberErrorLabel = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        tableWrapperPane = new javax.swing.JScrollPane();
        tablePanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        resultsTable = new javax.swing.JTable();

        setMaximumSize(new java.awt.Dimension(1000, 768));
        setMinimumSize(new java.awt.Dimension(470, 360));
        setPreferredSize(new java.awt.Dimension(1000, 768));

        viewSplitPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        viewSplitPane.setDividerLocation(230);
        viewSplitPane.setDividerSize(10);
        viewSplitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        viewSplitPane.setLastDividerLocation(230);
        viewSplitPane.setMaximumSize(new java.awt.Dimension(1000, 768));
        viewSplitPane.setMinimumSize(new java.awt.Dimension(470, 360));
        viewSplitPane.setPreferredSize(new java.awt.Dimension(1000, 768));

        filterPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        filterPanel.setMaximumSize(new java.awt.Dimension(1000, 230));
        filterPanel.setMinimumSize(new java.awt.Dimension(470, 100));
        filterPanel.setPreferredSize(new java.awt.Dimension(1000, 230));

        jLabel1.setText("Deafult filters");

        firstAvailableCarButton.setText("First Available Car");
        firstAvailableCarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstAvailableCarButtonActionPerformed(evt);
            }
        });

        showAvailabilityButton.setText("Show Availability");
        showAvailabilityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAvailabilityButtonActionPerformed(evt);
            }
        });

        showManufacturersButton.setText("Show Manufacturers");
        showManufacturersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showManufacturersButtonActionPerformed(evt);
            }
        });

        expiredCertificateButton.setText("Expired Maintenance Certificate");
        expiredCertificateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expiredCertificateButtonActionPerformed(evt);
            }
        });

        showAllButton.setText("Show All Cars");
        showAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Advanced filters");

        advFilterSplitPane.setDividerLocation(150);

        filterOptionsPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        filterList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Serial Number", "Model Number", "Year Manufactured", "Seats", "City" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        filterList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        filterList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                filterListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(filterList);

        javax.swing.GroupLayout filterOptionsPanelLayout = new javax.swing.GroupLayout(filterOptionsPanel);
        filterOptionsPanel.setLayout(filterOptionsPanelLayout);
        filterOptionsPanelLayout.setHorizontalGroup(
            filterOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
        );
        filterOptionsPanelLayout.setVerticalGroup(
            filterOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
        );

        advFilterSplitPane.setLeftComponent(filterOptionsPanel);

        filterByValuePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout filterByValuePanelLayout = new javax.swing.GroupLayout(filterByValuePanel);
        filterByValuePanel.setLayout(filterByValuePanelLayout);
        filterByValuePanelLayout.setHorizontalGroup(
            filterByValuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 820, Short.MAX_VALUE)
        );
        filterByValuePanelLayout.setVerticalGroup(
            filterByValuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 112, Short.MAX_VALUE)
        );

        advFilterSplitPane.setRightComponent(filterByValuePanel);

        javax.swing.GroupLayout filterPanelLayout = new javax.swing.GroupLayout(filterPanel);
        filterPanel.setLayout(filterPanelLayout);
        filterPanelLayout.setHorizontalGroup(
            filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(firstAvailableCarButton)
                .addGap(12, 12, 12)
                .addComponent(showAvailabilityButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(showManufacturersButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(expiredCertificateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(showAllButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(filterPanelLayout.createSequentialGroup()
                .addComponent(advFilterSplitPane)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filterPanelLayout.createSequentialGroup()
                .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, filterPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, filterPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2)))
                .addGap(6, 6, 6))
        );
        filterPanelLayout.setVerticalGroup(
            filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterPanelLayout.createSequentialGroup()
                .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstAvailableCarButton)
                    .addComponent(showAvailabilityButton)
                    .addComponent(showManufacturersButton)
                    .addComponent(expiredCertificateButton)
                    .addComponent(showAllButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(advFilterSplitPane)
                .addContainerGap())
        );

        viewSplitPane.setTopComponent(filterPanel);

        resultsSplitPane.setDividerLocation(150);
        resultsSplitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        viewPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setText("Manufactured Year");

        manufacturedYearElement.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1900", "1901", "1902", "1903", "1904", "1905", "1906", "1907", "1908", "1909", "1910", "1911", "1912", "1913", "1914", "1915", "1916", "1917", "1918", "1919", "1920", "1921", "1922", "1923", "1924", "1925", "1926", "1927", "1928", "1929", "1930", "1931", "1932", "1933", "1934", "1935", "1936", "1937", "1938", "1939", "1940", "1941", "1942", "1943", "1944", "1945", "1946", "1947", "1948", "1949", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018" }));

        jLabel6.setText("Total Seats");

        totalSeatsSpinner.setModel(new javax.swing.SpinnerNumberModel(2, 2, 10, 1));
        totalSeatsSpinner.setToolTipText("");

        jLabel7.setText("Available Seats");

        availableSeatsSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 9, 1));
        availableSeatsSpinner.setEnabled(false);

        availabilityCheckbox.setText("Available");
        availabilityCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availabilityCheckboxActionPerformed(evt);
            }
        });

        jLabel8.setText("Maintenance Certificate Expiry");

        jLabel10.setText("Available in city");

        jLabel4.setText("Serial Number");

        jLabel16.setText("Model Number");

        jLabel17.setText("Manufacturer");

        updateButton.setText("Update Values");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        certificateExpiryErrorLabel.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        certificateExpiryErrorLabel.setForeground(new java.awt.Color(251, 8, 8));
        certificateExpiryErrorLabel.setText("Invalid entry");

        cityErrorLabel.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        cityErrorLabel.setForeground(new java.awt.Color(251, 8, 8));
        cityErrorLabel.setText("Invalid entry");

        serialNumberErrorLabel.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        serialNumberErrorLabel.setForeground(new java.awt.Color(251, 8, 8));
        serialNumberErrorLabel.setText("Invalid entry");

        manufacturerErrorLabel.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        manufacturerErrorLabel.setForeground(new java.awt.Color(251, 8, 8));
        manufacturerErrorLabel.setText("Invalid entry");

        modelNumberErrorLabel.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        modelNumberErrorLabel.setForeground(new java.awt.Color(251, 8, 8));
        modelNumberErrorLabel.setText("Invalid entry");

        deleteButton.setText("Delete Record");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout viewPanelLayout = new javax.swing.GroupLayout(viewPanel);
        viewPanel.setLayout(viewPanelLayout);
        viewPanelLayout.setHorizontalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewPanelLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewPanelLayout.createSequentialGroup()
                        .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(viewPanelLayout.createSequentialGroup()
                                .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(availableSeatsSpinner)
                                    .addComponent(totalSeatsSpinner))
                                .addGap(56, 56, 56)
                                .addComponent(availabilityCheckbox))
                            .addGroup(viewPanelLayout.createSequentialGroup()
                                .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel10))
                                .addGap(27, 27, 27)
                                .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(manufacturedYearElement, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(certificateExpiryTextField))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(certificateExpiryErrorLabel)
                                    .addComponent(cityErrorLabel))))
                        .addContainerGap(456, Short.MAX_VALUE))
                    .addGroup(viewPanelLayout.createSequentialGroup()
                        .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(viewPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(110, 110, 110))
                                .addGroup(viewPanelLayout.createSequentialGroup()
                                    .addComponent(serialNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(viewPanelLayout.createSequentialGroup()
                                .addComponent(serialNumberErrorLabel)
                                .addGap(163, 163, 163)))
                        .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(viewPanelLayout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                .addGap(106, 106, 106))
                            .addGroup(viewPanelLayout.createSequentialGroup()
                                .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(manufacturerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(manufacturerErrorLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(modelNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(modelNumberErrorLabel))
                        .addGap(146, 146, 146)
                        .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(89, 89, 89))))
        );
        viewPanelLayout.setVerticalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel17)
                    .addComponent(jLabel16)
                    .addComponent(updateButton))
                .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(serialNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(manufacturerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(modelNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(serialNumberErrorLabel)
                            .addComponent(manufacturerErrorLabel)
                            .addComponent(modelNumberErrorLabel)))
                    .addGroup(viewPanelLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(deleteButton)))
                .addGap(2, 2, 2)
                .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(totalSeatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(availabilityCheckbox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(availableSeatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(manufacturedYearElement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(certificateExpiryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(certificateExpiryErrorLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityErrorLabel))
                .addContainerGap(145, Short.MAX_VALUE))
        );

        viewWrapperPane.setViewportView(viewPanel);

        resultsSplitPane.setBottomComponent(viewWrapperPane);

        resultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        resultsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resultsTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(resultsTable);

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 994, Short.MAX_VALUE)
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 24, Short.MAX_VALUE))
        );

        tableWrapperPane.setViewportView(tablePanel);

        resultsSplitPane.setLeftComponent(tableWrapperPane);

        viewSplitPane.setRightComponent(resultsSplitPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(viewSplitPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(viewSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void firstAvailableCarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstAvailableCarButtonActionPerformed
        Car firstAvailablecar = fleet.firstAvailableCar();
        updateTable(11);
        
        if(firstAvailablecar == null)
            return;
        
        DefaultTableModel tableModel = (DefaultTableModel) resultsTable.getModel();
        Object row[] = new Object[tableModel.getColumnCount()];
        row[0] = firstAvailablecar;
        row[1] = firstAvailablecar.getManufacturer();
        row[2] = firstAvailablecar.getModelNumber();
        row[3] = firstAvailablecar.getTotalSeats();
        row[4] = firstAvailablecar.getAvailableSeats();
        row[5] = firstAvailablecar.getCity();
        tableModel.addRow(row);
    }//GEN-LAST:event_firstAvailableCarButtonActionPerformed

    private void showAvailabilityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAvailabilityButtonActionPerformed
        updateTable(12);
        DefaultTableModel tableModel = (DefaultTableModel) resultsTable.getModel();
        Object row[] = new Object[tableModel.getColumnCount()];
        
        for(String status : new String[] {"Available", "Not-Available"}) {
            row[0] = status;
            row[1] = status.equals("Available") ? 
                    fleet.getAvailibityNumber() :
                    fleet.getFleet().size() - fleet.getAvailibityNumber();
            tableModel.addRow(row);
        }
    }//GEN-LAST:event_showAvailabilityButtonActionPerformed

    private void showManufacturersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showManufacturersButtonActionPerformed
        updateTable(13);
        TreeMap<String, Integer> manufacturers = fleet.getManufacturers();
        
        DefaultTableModel tableModel = (DefaultTableModel) resultsTable.getModel();
        Object row[] = new Object[tableModel.getColumnCount()];
        
        for(String key : manufacturers.keySet()) {
            row[0] = key;
            row[1] = manufacturers.get(key);
            tableModel.addRow(row);
        }
    }//GEN-LAST:event_showManufacturersButtonActionPerformed

    private void expiredCertificateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expiredCertificateButtonActionPerformed
        updateTable(14);
        DefaultTableModel tableModel = (DefaultTableModel) resultsTable.getModel();
        Object row[] = new Object[tableModel.getColumnCount()];
        
        for(Car c : fleet.carsWithExpiredMaintenanceCertificates()) {
            row[0] = c;
            row[1] = c.getMaintenanceCertificateExpiry();
            tableModel.addRow(row);
        }
    }//GEN-LAST:event_expiredCertificateButtonActionPerformed

    private void showAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllButtonActionPerformed
        updateTable(15);
        DefaultTableModel tableModel = (DefaultTableModel) resultsTable.getModel();
        Object row[] = new Object[tableModel.getColumnCount()];
        
        for(Car c : fleet.getFleet()) {
            row[0] = c;
            row[1] = c.getManufacturer();
            row[2] = c.getModelNumber();
            row[3] = c.getTotalSeats();
            row[4] = c.getAvailableSeats();
            row[5] = c.isAvailable() ? "Yes" : "No";
            row[6] = c.getCity();
            tableModel.addRow(row);
        }
    }//GEN-LAST:event_showAllButtonActionPerformed

    private void filterListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_filterListValueChanged
        Integer selectedFilter = filterList.getSelectedIndex();
        switch(selectedFilter) {
            case 0:
                updateTable(0);
                FilterBySerialNumberPanel filterPanel0 = 
                        new FilterBySerialNumberPanel(fleet, resultsTable, advFilterSplitPane);
                advFilterSplitPane.setRightComponent(filterPanel0);
                break;
            case 1:
                updateTable(1);
                FilterByModelNumberPanel filterPanel1 = 
                        new FilterByModelNumberPanel(fleet, resultsTable, advFilterSplitPane);
                advFilterSplitPane.setRightComponent(filterPanel1);
                break;
            case 2:
                updateTable(2);
                FilterByManufacturedYear filterPanel2 = 
                        new FilterByManufacturedYear(fleet, resultsTable, advFilterSplitPane);
                advFilterSplitPane.setRightComponent(filterPanel2);
                break;
            case 3:
                updateTable(3);
                FilterBySeats filterPanel3 = 
                        new FilterBySeats(fleet, resultsTable, advFilterSplitPane);
                advFilterSplitPane.setRightComponent(filterPanel3);
                break;
            case 4:
                updateTable(4);
                FilterByCity filterPanel4 = 
                        new FilterByCity(fleet, resultsTable, advFilterSplitPane);
                advFilterSplitPane.setRightComponent(filterPanel4);
                break;
            default:
                javax.swing.JPanel emptyPanel = new javax.swing.JPanel();
                emptyPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
                advFilterSplitPane.setRightComponent(emptyPanel);
        }
    }//GEN-LAST:event_filterListValueChanged

    private void availabilityCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availabilityCheckboxActionPerformed
        availableSeatsSpinner.setEnabled(availabilityCheckbox.isSelected());
        availableSeatsSpinner.setValue(1);
    }//GEN-LAST:event_availabilityCheckboxActionPerformed

    private void resultsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultsTableMouseClicked
        int selectedRowIndex = resultsTable.getSelectedRow();
        
        if(selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first!");
            return;
        }
        Car selectedCar = new Car();
        try {
            selectedCar = (Car) resultsTable.getValueAt(selectedRowIndex, 0);
        } catch(Exception ex) {
            return;
        }
        DateFormat df = new SimpleDateFormat("MM/dd/yyyy");
        
        serialNumberTextField.setText(selectedCar.getSerialNumber());
        manufacturerTextField.setText(selectedCar.getManufacturer());
        modelNumberTextField.setText(selectedCar.getModelNumber());

        totalSeatsSpinner.setValue(selectedCar.getTotalSeats());

        availabilityCheckbox.setSelected(selectedCar.isAvailable());
        availableSeatsSpinner.setEnabled(availabilityCheckbox.isSelected());
        availableSeatsSpinner.setValue(selectedCar.getAvailableSeats());

        manufacturedYearElement.setSelectedItem(selectedCar.getManufacturedYear());
        certificateExpiryTextField.setText(df.format(selectedCar.getMaintenanceCertificateExpiry()));
        
        cityTextField.setText(selectedCar.getCity());
        
        enableResultsPane();
    }//GEN-LAST:event_resultsTableMouseClicked

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        if(validateForm()) {
            int selectedRowIndex = resultsTable.getSelectedRow();
        
            if(selectedRowIndex < 0) {
                JOptionPane.showMessageDialog(null, "Please select a row first!");
                return;
            }
            
            DateFormat df = new SimpleDateFormat("MM/dd/yyyy");
            DateFormat dfWithTime = new SimpleDateFormat("MM/dd/yyyy hh:mm:ss a");
        
            Car selectedCar = (Car) resultsTable.getValueAt(selectedRowIndex, 0);
            
            selectedCar.setSerialNumber(serialNumberTextField.getText());
            selectedCar.setManufacturer(manufacturerTextField.getText());
            selectedCar.setModelNumber(modelNumberTextField.getText());

            selectedCar.setTotalSeats((Integer) totalSeatsSpinner.getValue());

            selectedCar.setAvailable(availabilityCheckbox.isSelected());
            selectedCar.setAvailableSeats(
                    availabilityCheckbox.isSelected() ? 
                            (Integer) availableSeatsSpinner.getValue() : 0);

            selectedCar.setManufacturedYear(
                    Integer.parseInt(
                            (String) manufacturedYearElement.getSelectedItem()));
            
            try {
                selectedCar.setMaintenanceCertificateExpiry(
                        df.parse(certificateExpiryTextField.getText()));
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(null, ex);
                return;
            }
            selectedCar.setCity(cityTextField.getText());
            JOptionPane.showMessageDialog(null, "Car successfully updated!");
            hideErrorLabels();
            resetEverything();
            lastUpdatedOnLabel.setText(dfWithTime.format(fleet.getLastModifiedOn()));
        } else {
            JOptionPane.showMessageDialog(null, "Invalid values in the form!");
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int selectedRowIndex = resultsTable.getSelectedRow();
        
        if(selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first!");
            return;
        }
        DateFormat dfWithTime = new SimpleDateFormat("MM/dd/yyyy hh:mm:ss a");
        Car selectedCar = (Car) resultsTable.getValueAt(selectedRowIndex, 0);
        fleet.deleteCar(selectedCar);
        JOptionPane.showMessageDialog(null, "Car successfully deleted!");
        hideErrorLabels();
        resetEverything();
        lastUpdatedOnLabel.setText(dfWithTime.format(fleet.getLastModifiedOn()));            
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void updateTable(int type) {
        String[] columnNames;
        
        switch(type) {
            case 0:
                columnNames = new String[] {"Serial Number", "Manufacturer", "Model Number"};
                break;
            case 1:
                columnNames = new String[] {"Serial Number", "Manufacturer", "Model Number"};
                break;
            case 2:
                columnNames = new String[] {"Serial Number", "Manufactured Year"};
                break;
            case 3:
                columnNames = new String[] {"Serial Number", "Total Seats", "Available Seats", "City"};
                break;
            case 4:
                columnNames = new String[] {"Serial Number", "City"};
                break;
            case 11:
                columnNames = new String[] {"Serial Number", "Manufacturer", "Model Number", "Total Seats", "Available Seats", "City"};
                break;
            case 12:
                columnNames = new String[] {"Status", "No. Of Cars"};
                break;    
            case 13:
                columnNames = new String[] {"Manufacturers", "Total Cars"};
                break;
            case 14:
                columnNames = new String[] {"Serial Number", "Expired On"};
                break;
            default:
                columnNames = new String[] {"Serial Number", "Manufacturer", "Model Number", 
                    "Total Seats", "Available Seats", "Availability", "City"};;
        }
        DefaultTableModel newTableModel = new DefaultTableModel(
            new Object [][] {},
            columnNames
        );
        ((DefaultTableModel)resultsTable.getModel()).setRowCount(0);
        resultsTable.setModel(newTableModel);
        clearFields();
        disableResultsPane();
    }
    
    private void hideErrorLabels() {
        serialNumberErrorLabel.setVisible(false);
        manufacturerErrorLabel.setVisible(false);
        modelNumberErrorLabel.setVisible(false);
        certificateExpiryErrorLabel.setVisible(false);
        cityErrorLabel.setVisible(false);
    }
    
    private void disableResultsPane() {
        for(java.awt.Component c : viewPanel.getComponents()) {
            if(!(c instanceof javax.swing.JLabel))
                c.setEnabled(false);
        }
    }
    
    private void enableResultsPane() {
        for(java.awt.Component c : viewPanel.getComponents())
            c.setEnabled(true);
    }
    
    private void resetEverything() {
        clearFields();
        disableResultsPane();
        javax.swing.JPanel emptyPanel = new javax.swing.JPanel();
        emptyPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        advFilterSplitPane.setRightComponent(emptyPanel);
        showAllButton.doClick();
    }
    
    private void clearFields() {
        serialNumberTextField.setText("");
        manufacturerTextField.setText("");
        modelNumberTextField.setText("");
        
        totalSeatsSpinner.setValue(0);
        availabilityCheckbox.setSelected(false);
        availableSeatsSpinner.setValue(0);
        availableSeatsSpinner.setEnabled(false);
        
        manufacturedYearElement.setSelectedIndex(0);
        certificateExpiryTextField.setText("");
        cityTextField.setText("");
    }
    
    private boolean validateForm() {
        hideErrorLabels();
        boolean isValid = true;
        if("".equals(serialNumberTextField.getText())) {
            isValid = false;
            serialNumberErrorLabel.setVisible(!isValid);
        }
        if("".equals(manufacturerTextField.getText())) {
            isValid = false;
            manufacturerErrorLabel.setVisible(!isValid);
        }
        if("".equals(modelNumberTextField.getText())) {
            isValid = false;
            modelNumberErrorLabel.setVisible(!isValid);
        }
        if("".equals(certificateExpiryErrorLabel.getText())) {
            isValid = false;
            certificateExpiryErrorLabel.setVisible(!isValid);
        } else {
            String[] date = certificateExpiryTextField.getText().split("/");
            if(date.length != 3) {
                isValid = false;
                certificateExpiryErrorLabel.setVisible(!isValid);
            } else {
                try {
                    int month = Integer.parseInt(date[0]);
                    int day = Integer.parseInt(date[1]);
                    int year = Integer.parseInt(date[2]);
                    
                    ArrayList<Integer> longMonths = new ArrayList<>(
                            Arrays.asList(1, 3, 5, 7, 8, 10, 12));
                    if((month > 0 && month < 13) && 
                            (year >= 1900 && year <= 2100) &&
                            (day >= 1 && day <= 31)) {
                        if(!longMonths.contains(month) && day > 30) {
                            isValid = false;
                            certificateExpiryErrorLabel.setVisible(!isValid);
                        } else if(month == 2) {
                            if((isLeapYear(year) && day > 29) || 
                                    (!isLeapYear(year) && day >28)) {
                                isValid = false;
                                certificateExpiryErrorLabel.setVisible(!isValid);
                            }
                        }
                    } else {
                        isValid = false;
                        certificateExpiryErrorLabel.setVisible(!isValid);
                    }
                } catch(NumberFormatException ex) {
                    isValid = false;
                    certificateExpiryErrorLabel.setVisible(!isValid);
                }
            }
        }
        if("".equals(cityTextField.getText())) {
            isValid = false;
            cityErrorLabel.setVisible(!isValid);
        }
        
        return isValid;
    }
    
    private boolean isLeapYear(int year) {
        return (((year % 4 == 0) && 
                (year % 100 != 0)) ||
                (year % 400 == 0));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSplitPane advFilterSplitPane;
    private javax.swing.JCheckBox availabilityCheckbox;
    private javax.swing.JSpinner availableSeatsSpinner;
    private javax.swing.JLabel certificateExpiryErrorLabel;
    private javax.swing.JTextField certificateExpiryTextField;
    private javax.swing.JLabel cityErrorLabel;
    private javax.swing.JTextField cityTextField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton expiredCertificateButton;
    private javax.swing.JPanel filterByValuePanel;
    private javax.swing.JList<String> filterList;
    private javax.swing.JPanel filterOptionsPanel;
    private javax.swing.JPanel filterPanel;
    private javax.swing.JButton firstAvailableCarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JComboBox<String> manufacturedYearElement;
    private javax.swing.JLabel manufacturerErrorLabel;
    private javax.swing.JTextField manufacturerTextField;
    private javax.swing.JLabel modelNumberErrorLabel;
    private javax.swing.JTextField modelNumberTextField;
    private javax.swing.JSplitPane resultsSplitPane;
    private javax.swing.JTable resultsTable;
    private javax.swing.JLabel serialNumberErrorLabel;
    private javax.swing.JTextField serialNumberTextField;
    private javax.swing.JButton showAllButton;
    private javax.swing.JButton showAvailabilityButton;
    private javax.swing.JButton showManufacturersButton;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JScrollPane tableWrapperPane;
    private javax.swing.JSpinner totalSeatsSpinner;
    private javax.swing.JButton updateButton;
    private javax.swing.JPanel viewPanel;
    private javax.swing.JSplitPane viewSplitPane;
    private javax.swing.JScrollPane viewWrapperPane;
    // End of variables declaration//GEN-END:variables
}
