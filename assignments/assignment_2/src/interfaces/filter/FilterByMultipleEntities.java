/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces.filter;

import business.Car;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raghavan
 */
public class FilterByMultipleEntities extends javax.swing.JPanel {

    private ArrayList<Car> filteredCars;
    private javax.swing.JPanel previousPanel;
    private javax.swing.JSplitPane advFilterSplitPane;
    private javax.swing.JTable resultsTable;
    /**
     * Creates new form FilterByMultipleEntities
     */
    public FilterByMultipleEntities() {
        initComponents();
    }
    
    public FilterByMultipleEntities(ArrayList<Car> filteredCars, 
                                    javax.swing.JPanel previousPanel,
                                    javax.swing.JSplitPane advFilterSplitPane,
                                    javax.swing.JTable resultsTable) {
        this.filteredCars = filteredCars;
        this.previousPanel = previousPanel;
        this.advFilterSplitPane = advFilterSplitPane;
        this.resultsTable = resultsTable;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        applyFilterButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        minSeatsSpinner = new javax.swing.JSpinner();
        excludeExpiredCarsCheckbox = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        carAgeComboBox = new javax.swing.JComboBox<>();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setMaximumSize(new java.awt.Dimension(850, 130));
        setPreferredSize(new java.awt.Dimension(850, 130));

        applyFilterButton.setText("Apply Filter");
        applyFilterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyFilterButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Minimum Seats");

        minSeatsSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        excludeExpiredCarsCheckbox.setText("Exclude Cars with Expired Maintenance Certificate");

        jLabel2.setText("Cars' Age");

        carAgeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any", "Old (<2000)", "Aging (2000 - 2010)", "New (> 2010)" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(excludeExpiredCarsCheckbox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 162, Short.MAX_VALUE)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(applyFilterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(minSeatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(carAgeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(minSeatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(carAgeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(applyFilterButton)
                    .addComponent(cancelButton)
                    .addComponent(excludeExpiredCarsCheckbox))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void applyFilterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyFilterButtonActionPerformed
        Integer minSeats = (Integer) minSeatsSpinner.getValue();
        String age = (String) carAgeComboBox.getSelectedItem();
        boolean excludeExpired = excludeExpiredCarsCheckbox.isSelected();
        
        ArrayList<Car> results = applyMaintenanceCertFilter(
                                    applyAgeFilter(
                                        applySeatsFilter(
                                            filteredCars, minSeats), age), excludeExpired);
        
        DefaultTableModel tableModel = (DefaultTableModel) resultsTable.getModel();
        Object row[] = new Object[tableModel.getColumnCount()];

        tableModel.setRowCount(0);
        if(tableModel.getColumnName(1).equalsIgnoreCase("City"))
            for(Car c : results) {
                row[0] = c;
                row[1] = c.getCity();
                tableModel.addRow(row);
            }
        else
            for(Car c : results) {
                row[0] = c;
                row[1] = c.getManufacturer();
                row[2] = c.getModelNumber();
                tableModel.addRow(row);
            }
    }//GEN-LAST:event_applyFilterButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        DefaultTableModel tableModel = (DefaultTableModel) resultsTable.getModel();
        Object row[] = new Object[tableModel.getColumnCount()];

        tableModel.setRowCount(0);
        if(tableModel.getColumnName(1).equalsIgnoreCase("City"))
            for(Car c : filteredCars) {
                row[0] = c;
                row[1] = c.getCity();
                tableModel.addRow(row);
            }
        else
            for(Car c : filteredCars) {
                row[0] = c;
                row[1] = c.getManufacturer();
                row[2] = c.getModelNumber();
                tableModel.addRow(row);
            }
        
        advFilterSplitPane.setRightComponent(previousPanel);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private ArrayList<Car> applySeatsFilter(ArrayList<Car> cars, Integer seats) {
        if(seats == 0)
            return cars;
        ArrayList<Car> result = new ArrayList<>();
        for(Car c : cars)
            if(c.getAvailableSeats() >= seats)
                result.add(c);
        return result;
    }
    
    private ArrayList<Car> applyAgeFilter(ArrayList<Car> cars, String age) {
        if(age == null || age.contains("Any"))
            return cars;
        ArrayList<Car> result = new ArrayList<>();
        
        if(age.contains("Old"))
            for(Car c : cars)
            if(c.getManufacturedYear() <= 2000)
                result.add(c);
            else;
        else if(age.contains("Aging"))
            for(Car c : cars)
            if(c.getManufacturedYear() > 2000 && c.getManufacturedYear() <= 2010)
                result.add(c);
            else;
        else
            for(Car c : cars)
            if(c.getManufacturedYear() > 2010)
                result.add(c);
        
        return result;
    }
    
    private ArrayList<Car> applyMaintenanceCertFilter(ArrayList<Car> cars, boolean excludeExpiredCert) {
        if(!excludeExpiredCert)
            return cars;
        ArrayList<Car> result = new ArrayList<>();
        for(Car c : cars)
            if(c.getMaintenanceCertificateExpiry().after(new Date()))
                result.add(c);
        return result;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyFilterButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox<String> carAgeComboBox;
    private javax.swing.JCheckBox excludeExpiredCarsCheckbox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSpinner minSeatsSpinner;
    // End of variables declaration//GEN-END:variables
}
